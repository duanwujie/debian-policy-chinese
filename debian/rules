#!/usr/bin/make -f
############################ -*- Mode: Makefile -*- ###########################
## rules ---
## Author	    : Manoj Srivastava ( srivasta@tiamat.datasync.com )
## Created On	    : Thu Oct 29 15:35:55 1998
## Created On Node  : tiamat.datasync.com
## Last Modified By : Manoj Srivastava
## Last Modified On : Sat Jul 29 23:17:29 2000
## Last Machine Used: glaurung.green-gryphon.com
## Update Count	    : 55
## Status	    : Unknown, Use with caution!
## HISTORY	    :
## Description	    :
## $Id$
###############################################################################

# set the dpkg-architecture vars
export DEB_BUILD_ARCH      := $(shell dpkg-architecture -qDEB_BUILD_ARCH)
export DEB_BUILD_GNU_CPU   := $(shell dpkg-architecture -qDEB_BUILD_GNU_CPU)
export DEB_BUILD_GNU_SYSTEM:= $(shell dpkg-architecture -qDEB_BUILD_GNU_SYSTEM)
export DEB_BUILD_GNU_TYPE  := $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
export DEB_HOST_ARCH       := $(shell dpkg-architecture -qDEB_HOST_ARCH)
export DEB_HOST_GNU_CPU    := $(shell dpkg-architecture -qDEB_HOST_GNU_CPU)
export DEB_HOST_GNU_SYSTEM := $(shell dpkg-architecture -qDEB_HOST_GNU_SYSTEM)
export DEB_HOST_GNU_TYPE   := $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)



# The name of the package (for example, `emacs').
package := $(shell grep Source debian/control | sed 's/^Source: //')
arch	:= $(shell dpkg --print-installation-architecture)
date	:= $(shell date +"%Y-%m-%d")
version := $(shell LC_ALL=C dpkg-parsechangelog | \
		   grep ^Version: | sed 's/^Version: *//')
ppackage:= packaging-manual

FILES_TO_CLEAN  = debian/files debian/buildinfo  debian/substvars \
		  debian/postinst debian/prerm \
		  version.ent  policy.lout policy.lout.ld lout.li \
		  upgrading-checklist.text policy.text.gz \
		  packaging.lout packaging.text.gz packaging.ps \
		  packaging.pdf.gz menu-policy.text.gz \
		  policy-process.text.gz policy-process.pdf.gz  \
		  proposal.text.gz menu-policy.pdf.gz proposal.pdf.gz \
		  mime-policy.text.gz mime-policy.pdf.gz
STAMPS_TO_CLEAN = stamp-policy stamp-packaging stamp-build stamp-configure
DIRS_TO_CLEAN   = debian/tmp policy.html fhs debian/tmp-packaging \
		  packaging.html menu-policy.html mime-policy.html \
		  proposal.html policy-process.html
SGML_FILES      = policy packaging menu-policy mime-policy proposal \
                  policy-process

# Location of the source dir
SRCTOP	  := $(shell if [ "$$PWD" != "" ]; then echo $$PWD; else pwd; fi;)
TMPTOP	  := $(SRCTOP)/debian/tmp
DOCDIR	  := $(TMPTOP)/usr/share/doc/$(package)
LIBDIR	  := $(TMPTOP)/usr/share/doc-base

PTMPTOP	  := $(SRCTOP)/debian/tmp-packaging
PDOCDIR	  := $(PTMPTOP)/usr/share/doc/$(ppackage)
PLIBDIR	  := $(PTMPTOP)/usr/share/doc-base

# While we have two versions of the FHS installed in the source package,
# we need to modify this to handle it.  This is the easiest way to do it.
# FHS_ARCHIVE  =$(shell ls -1 fhs*.tar.gz)
# And with version 2.1, we have to build the text and dvi versions
# ourselves :-(
FHS_ARCHIVE  =fhs-2.1-source.tar.gz
FHS_FILES    =fhs/fhs.dvi fhs/fhs.ps fhs/fhs.txt fhs/fhs.pdf
FSSTND_FILES =FSSTND-FAQ fsstnd-1.2.dvi.gz fsstnd-1.2.ps.gz fsstnd-1.2.txt.gz
POLICY_FILES =policy.text.gz policy.sgml virtual-package-names-list.text \
	      upgrading-checklist.text libc6-migration.text \
	      version.ent proposal.sgml proposal.text.gz \
	      menu-policy.sgml menu-policy.text.gz \
	      mime-policy.sgml mime-policy.text.gz \
              policy-process.text.gz policy-process.sgml
BYHAND_FILES =policy.text.gz libc6-migration.text \
	      virtual-package-names-list.text menu-policy.text.gz \
	      mime-policy.text.gz
PBYHAND_FILES=packaging.text.gz

install_file   = /usr/bin/install -p	-o root -g root	 -m  644
install_program= /usr/bin/install -p	-o root -g root	 -m  755
make_directory = /usr/bin/install -p -d -o root -g root	 -m  755

GROFF_VERSION := $(shell dpkg -s groff | sed -n -e 's/Version: //p')


all build: stamp-build
stamp-build:
	$(checkdir)
	-test -f stamp-configure || $(MAKE) -f debian/rules configure
	for file in $(SGML_FILES); do \
	  nsgmls -gues $$file.sgml; \
	  debiandoc2html $$file.sgml; \
	  debiandoc2text $$file.sgml; \
	  if [ -f $$file.txt ]; then mv $$file.txt $$file.text; fi; \
	  gzip -9f $$file.text; \
	done
	tar zfx $(FHS_ARCHIVE)
	# Need to use a patched tmac.m macro file if we're using a pre-1.16
	# groff; version 1.16 is apparently fixed
	if dpkg --compare-versions $(GROFF_VERSION) lt 1.16; then \
	    cp /usr/share/groff/tmac/tmac.m fhs && \
	    cd fhs && patch -p1 < ../mm1.32-patch; \
	fi
	# The extra '.' in the tmac path doesn't matter if
	GROFF_TMAC_PATH=. cd fhs && $(MAKE) all
	lynx -dump fhs-changes-2.1.html > fhs/fhs-changes-2.1.text
	lynx -dump upgrading-checklist.html > upgrading-checklist.text
	touch stamp-build

configure: stamp-configure
stamp-configure:
	rm -f version.ent
	echo "<!entity version \"$(version)\">" >> version.ent
	echo "<!entity date    \"$(date)\">"	    >> version.ent
	touch stamp-configure

clean:
# Undoes the effect of `make -f debian/rules build'.
	$(checkdir)
	rm -f  $(FILES_TO_CLEAN) $(STAMPS_TO_CLEAN)
	rm -rf $(DIRS_TO_CLEAN)
	rm -f core `find . \( -name '*.orig' -o -name '*.rej' -o \
	  -name '*~' -o -name '*.bak' -o -name '#*#' -o \
	  -name '.*.orig' -o -name '.*.rej' -o -name '.SUMS' -o \
	  -size 0 \) -print` TAGS


binary:		binary-indep binary-arch
binary-arch:	build
	$(checkdir)
# There are no architecture-dependent files to be uploaded
# generated by this package.  If there were any they would be
# made here.

binary-indep:	stamp-policy stamp-packaging
stamp-policy:  build
	@test $$(id | sed -e 's/(.*$$//' -e 's/^uid=//') || \
		(echo need root priviledges; exit 1)
	$(checkdir)
	test -f stamp-build	|| $(MAKE) -f	     debian/rules build
	-rm -rf			$(TMPTOP)
	$(make_directory)	$(TMPTOP)/DEBIAN
	$(make_directory)	$(DOCDIR)/fsstnd
	$(make_directory)	$(DOCDIR)/fhs
	$(make_directory)	$(LIBDIR)
	# create a substvar to reference from debian/control so that
	# we don't hardcode the policy compliance of the policy
	# package.  I guess some might question this but I take it as
	# a given that the debian-policy pkg must always comply with
	# itself...
	echo "debian-policy:Version=$(version)"	     > debian/substvars
	echo "packaging-manual:Version=$(version)"   >> debian/substvars
	$(install_file)	    $(POLICY_FILES)	     $(DOCDIR)/
	$(install_file)	    $(FSSTND_FILES)	     $(DOCDIR)/fsstnd/
	$(install_file)	    $(FHS_FILES)	     $(DOCDIR)/fhs/
	$(install_file)	    debian/changelog	     $(DOCDIR)/
	-gzip -fqr9	    $(DOCDIR)
	$(install_file)	    debian/copyright	     $(DOCDIR)/
	$(install_file)	    debian-policy.desc	     $(LIBDIR)/debian-policy
	(tar cf -	    policy.html) |	     (cd $(DOCDIR);   tar xf -)
	(tar cf -	    menu-policy.html) |	     (cd $(DOCDIR);   tar xf -)
	(tar cf -	    mime-policy.html) |	     (cd $(DOCDIR);   tar xf -)
	(tar cf -	    proposal.html) |	     (cd $(DOCDIR);   tar xf -)
	(tar cf -	    policy-process.html) |   (cd $(DOCDIR);   tar xf -)
	sed -e 's/#PACKAGE#/$(package)/g' debian/postinst.in > debian/postinst
	sed -e 's/#PACKAGE#/$(package)/g' debian/prerm.in > debian/prerm
	$(install_program)  debian/{postinst,prerm}  debian/tmp/DEBIAN/
	dpkg-gencontrol	    -pdebian-policy -Pdebian/tmp -isp
	chown		    -R root.root debian/tmp
	chmod		    -R go=rX debian/tmp
	dpkg		    --build debian/tmp ..
	debiandoc2latexps    policy.sgml
	mv policy.ps         ../
	gzip -9qvf            ../policy.ps
	debiandoc2latexpdf  policy.sgml
	mv policy.pdf        ../
	gzip -9qfv 	     ../policy.pdf
	GZIP=-9v tar zcf    ../policy.html.tar.gz    policy.html
	dpkg-distaddfile    -fdebian/files	     policy.ps.gz	byhand -
	dpkg-distaddfile    -fdebian/files	     policy.pdf.gz	byhand -
	dpkg-distaddfile    -fdebian/files	     policy.html.tar.gz byhand -
	for i in	    $(BYHAND_FILES); do \
	  $(install_file)   $$i		   ..		     ; \
	  dpkg-distaddfile  -fdebian/files $$i	     byhand - ; \
	done
	touch		   stamp-policy

stamp-packaging:  build
	@test $$(id | sed -e 's/(.*$$//' -e 's/^uid=//') || \
		(echo need root priviledges; exit 1)
	$(checkdir)
	test -f stamp-build	|| $(MAKE) -f	     debian/rules build
	-rm -rf			$(PTMPTOP)
	$(make_directory)	$(PTMPTOP)/DEBIAN
	$(make_directory)	$(PDOCDIR)
	$(make_directory)	$(PLIBDIR)
	echo "debian-policy:Version=$(version)"	     > debian/substvars
	echo "packaging-manual:Version=$(version)"   >> debian/substvars

	$(install_file)	   packaging.sgml	     $(PDOCDIR)/
	$(install_file)	   version.ent	             $(PDOCDIR)/
	$(install_file)	   debian/changelog	     $(PDOCDIR)/
	-gzip -fqr9	   $(PDOCDIR)
	$(install_file)	   packaging.text.gz	     $(PDOCDIR)/
	$(install_file)	   debian/copyright	     $(PDOCDIR)/
	$(install_file)	   packaging-manual.desc     $(PLIBDIR)/packaging-manual
	(tar cf -	   packaging.html) |	     (cd $(PDOCDIR);   tar xf -)
	sed -e 's/#PACKAGE#/$(ppackage)/g' debian/postinst.in > debian/postinst
	sed -e 's/#PACKAGE#/$(ppackage)/g' debian/prerm.in > debian/prerm
	$(install_program) debian/{postinst,prerm}   debian/tmp-packaging/DEBIAN/
	dpkg-gencontrol	   -ppackaging-manual -Pdebian/tmp-packaging -isp
	chown		   -R root.root debian/tmp-packaging
	chmod		   -R go=rX debian/tmp-packaging
	dpkg		   --build debian/tmp-packaging ..
	debiandoc2latexps  packaging.sgml
	debiandoc2latexpdf packaging.sgml
	mv packaging.ps    ../
	mv packaging.pdf   ../
	gzip -9vf          ../packaging.ps
	gzip -9vf          ../packaging.pdf
	GZIP=-9v tar zcf   ../packaging.html.tar.gz    packaging.html
	dpkg-distaddfile   -fdebian/files	 packaging.ps.gz       byhand -
	dpkg-distaddfile   -fdebian/files	 packaging.pdf.gz      byhand -
	dpkg-distaddfile   -fdebian/files	 packaging.html.tar.gz byhand -
	for i in	    $(PBYHAND_FILES); do \
	  $(install_file)   $$i		   ..		     ; \
	  dpkg-distaddfile  -fdebian/files $$i	     byhand - ; \
	done
	touch		   stamp-


define checkdir
	test -f debian/rules -a -f policy.sgml
endef

source diff:
	@echo >&2 'source and diff are obsolete - use dpkg-source -b'; false

.PHONY: binary binary-arch binary-indep clean checkroot

#Local variables:
#mode: makefile
#End:
